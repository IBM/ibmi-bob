name: PR Review

on:
  workflow_dispatch:

  pull_request:
    branches: ["master"]

jobs:
  lint-and-python-tests:
    name: Run Linter and Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install nox
        run: python -m pip install nox
      - name: Run Linter
        run: nox -s lint
      - name: Run Python Tests
        run: nox -s test

  project-build:
    name: Build ${{ matrix.project.name }}
    runs-on: ubuntu-latest
    environment: COMMON1
    strategy:
      matrix:
        project:
          - { 
              name: bob-recursive-example,
              lib: lib1,
              directory: functionsVAT,
              file: vat300.rpgle,
              firstBuild: "0 failed 125 succeed 125 total",
              secondBuild: "0 failed 5 succeed 5 total",
              firstCompile: "0 failed 1 succeed 1 total",
              secondCompile: "0 failed 2 succeed 2 total"
            }
          - { 
              name: ibmi-company_system,
              lib: CURLIB,
              directory: qrpglesrc,
              file: mypgm.pgm.rpgle,
              firstBuild: "0 failed 7 succeed 7 total",
              secondBuild: "0 failed 1 succeed 1 total",
              firstCompile: "0 failed 1 succeed 1 total",
              secondCompile: "0 failed 1 succeed 1 total"
          }
    steps:
      - name: Checkout ibmi-bob
        uses: actions/checkout@v4
      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install Dependencies
        run: |
          npm i -g @ibm/ibmi-ci
          npm i -g @ibm/sourceorbit
      - name: Deploy to IBM i
        run: | 
          ici \
            --cmd "echo Setting up bob..." \
            --cmd "mkdir -p './builds/github_ci/${GITHUB_SHA}/ibmi_bob'" \
            --rcwd "./builds/github_ci/${GITHUB_SHA}/ibmi_bob" \
            --push "." \
            --cmd "echo Setting up ${{ matrix.project.name }}..." \
            --ignore --cl "CRTLIB $(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }})" \
            --ignore --cl "CLRLIB $(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }})" \
            --cmd "git clone https://github.com/IBM/${{ matrix.project.name }}.git ../${{ matrix.project.name }}" \
            --rcwd "../${{ matrix.project.name }}" \
            --cmd "echo Full build..." \
            --cmd "../ibmi_bob/bin/makei b -e ${{ matrix.project.lib }}=$(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }}) | tee firstBuild.log" \
            --cmd "grep '${{ matrix.project.firstBuild }}' firstBuild.log || { echo 'First build failed!'; exit 1; }" \
            --cmd "echo Touch one file and full build..." \
            --cmd "touch ${{ matrix.project.directory }}/${{ matrix.project.file }}" \
            --cmd "../ibmi_bob/bin/makei b -e ${{ matrix.project.lib }}=$(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }}) | tee secondBuild.log" \
            --cmd "grep '${{ matrix.project.secondBuild }}' secondBuild.log || { echo 'Second build failed!'; exit 1; }" \
            --cmd "echo Touch one file and compile it..." \
            --cmd "touch ${{ matrix.project.directory }}/${{ matrix.project.file }}" \
            --cmd "../ibmi_bob/bin/makei c -f ${{ matrix.project.directory }}/${{ matrix.project.file }} -e ${{ matrix.project.lib }}=$(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }}) | tee firstCompile.log" \
            --cmd "grep '${{ matrix.project.firstCompile }}' firstCompile.log || { echo 'First compile failed!'; exit 1; }" \
            --cmd "echo Touch one file and compile directory..." \
            --cmd "touch ${{ matrix.project.directory }}/${{ matrix.project.file }}" \
            --cmd "../ibmi_bob/bin/makei c -f ${{ matrix.project.directory }} -e ${{ matrix.project.lib }}=$(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }}) | tee secondCompile.log" \
            --cmd "grep '${{ matrix.project.secondCompile }}' secondCompile.log || { echo 'Second compile failed!'; exit 1; }" \
            --cmd "echo Clean up..." \
            --ignore --cl "DLTLIB $(so -bl ${GITHUB_HEAD_REF}_${{ matrix.project.name }})" \
            --rcwd "../../../github_ci/" \
        env:
          IBMI_HOST: ${{ secrets.IBMI_HOST }}
          IBMI_USER: ${{ secrets.IBMI_USER }}
          IBMI_PASSWORD: ${{ secrets.IBMI_PASSWORD }}
          IBMI_SSH_PORT: ${{ secrets.IBMI_SSH_PORT }}